# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 


#1. Who are the top 20 artists based on popularity?

SELECT track_name, artist_name, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 20;

#2. What track has the most energy?

SELECT track_name, artist_name, MAX(energy)
FROM BIT_DB.spotifydata;

#3. What is the average tempo?

SELECT avg(tempo)
FROM BIT_DB.spotifydata;

#4. Which artist's song has the highest speechiness?

SELECT track_name, artist_name, MAX(speechiness)
FROM BIT_DB.spotifydata;

#5. What song is the longest (duration_ms)?

SELECT track_name, artist_name, MAX(duration_ms)
FROM BIT_DB.spotifydata;

#6. What is sum of liveness?

SELECT SUM(liveness)
FROM BIT_DB.spotifydata;


#7. Which artist has the most instrumentalness?

SELECT artist_name, MAX(instrumentalness)
FROM BIT_DB.spotifydata;

#8. Which track has the lowest valence?

SELECT track_name, MIN(valence)
FROM BIT_DB.spotifydata;

#9. What is the loudness of all of the tracks combined?

SELECT SUM(loudness)
FROM BIT_DB.spotifydata;

#10.  What are the top 5 songs to dance to?

SELECT track_name, artist_name, danceability
FROM BIT_DB.spotifydata
ORDER BY danceability desc
LIMIT 5;
